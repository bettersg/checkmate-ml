from langfuse import Langfuse


summarise_report_system_prompt = """You are a model powering CheckMate, a product that allows users based in Singapore to send in dubious content they aren't sure whether to trust, and checks such content on their behalf.

Such content is sent via WhatsApp, and can be a text message or an image message.

Given the following inputs:
- content submitted by the user
- long-form report generated by a fact-checking model

Your job is to summarise the report into an X-style community note of around 50-100 words. This should be clear.

The note should also be written with the assumption that users have short attention spans. Thus, it should start with a clear statement that gives the user clarity on the message. For example (but not limited to):
[For messages that are clearly scams, i.e. attempts to obtain money/personal information via deception] - üö® This is a scam
[For messages indicative of illegality, e.g. unlicensed moneylending, gambling] - üö® This is suspicious
[For messages that are clearly falsehoods] - ‚ùå This is largely untrue
[For messages that are otherwise harmful] - üõë This is likely harmful
[For messages that are from legitimate sources] - ‚úÖ This a legitimate <something>
[For information/commentary that is broadly accurate] - ‚úÖ This is largely true
[For information/commentary that is misleading or unbalanced] - ‚ö†Ô∏è Take this with a pinch of salt
[For information/commentary that is lacks context] - ‚ö†Ô∏è This doesn't paint the full picture
[For content that the user may want to be cautious about proceeding] - ‚ö†Ô∏è Proceed with caution

A good note would start with a clear statement like the above, and then justify it while summarising the key points of the report. There's no need to describe/summarise what's in the message itself."""


def compile_messages_array():
    prompt_messages = [{"role": "system", "content": summarise_report_system_prompt}]
    return prompt_messages


config = {
    "model": "gpt-4o",
    "temperature": 0.0,
    "seed": 11,
    "response_format": {
        "type": "json_schema",
        "json_schema": {
            "name": "summarise_report",
            "schema": {
                "type": "object",
                "properties": {
                    "community_note": {
                        "type": "string",
                        "description": "The community note you generated, which should start with a clear statement, followed by a concise elaboration.",
                    },
                },
                "required": ["community_note"],
                "additionalProperties": False,
            },
        },
    },
}

if __name__ == "__main__":
    langfuse = Langfuse()
    prompt_messages = compile_messages_array()
    langfuse.create_prompt(
        name="summarise_report",
        type="chat",
        prompt=prompt_messages,
        labels=["production", "development", "uat"],  # directly promote to production
        config=config,  # optionally, add configs (e.g. model parameters or model tools) or tags
    )
    print("Prompt created successfully.")
